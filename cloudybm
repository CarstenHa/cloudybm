#!/bin/bash

# Pfad zur Datei bookmarks.txt
if [ -z "$remotepath" ]; then
 if [ "$(find ~ -name "bookmarks.txt" | wc -l)" == 1 ]; then
  remotepath="$(dirname "$(find ~ -name "bookmarks.txt")")"
 else
  logger -s --id=$$ "Pfad für Variable remotepath konnte nicht eindeutig ermittelt werden."
  exit 1
 fi
fi

usage() {
cat <<EOU

Skript zum Hinzufügen von Lesezeichen.

$0 [-h]
$0 [-B] [KEYWORDS[,...]] [DESC] URI

Optionen:

   -B [KEYWORDS[,...]] [DESC] URI

	Fügt ein neues Lesezeichen der Datei bookmarks.txt hinzu.
	Schlüsselwörter und Beschreibung sind optional. Die Angabe einer URI ist erforderlich.
	Beispiele:
	$0 -B "Wort1,Wort2,etc." "Hier steht die Beschreibung" "https://example.com"
	$0 -B "" "" "https://example.com"

   -h

	ruft diese Hilfe auf.

EOU
}

impbmfile() {

     echo "Sicherung wird erstellt ..."
     cp -vf "${remotepath}/bookmarks.txt" "${remotepath}/bookmarks.bak"
     #Noch auf .html/.htm-Suffix prüfen?
     while [ ! -e "$bmfile" ]; do
      read -p "Bitte eine Boookmark-HTML-Seite angeben: " bmfile
     done
     bmlist="$(sed -n 's/^.*\(<A.*<\/A>\).*$/\1/p' "$bmfile")"

     # Ist notwendig, wenn z.B. ven -B mit newbookmark von remote ausgerufen wird.
     ttycheck="$(tty -s; echo $?)"
     # Notwendig, weil Abfrage in Schleife stattfindet und aus here-String gelesen wird.
     term=$(tty)
     while read -r singlebm; do

      bmlink="$(echo "$singlebm" | grep -o 'HREF="[^"]*"' | sed 's/^HREF="\(.*\)"/\1/')"
      # Wichtig für korrekte Suche das $ im grep-Befehl (auch bei Variable bmlinenr).
      oldbmlink="$(cat "${remotepath}/bookmarks.txt" 2>/dev/null | grep "${bmlink}$")"
      bmtags="$(echo "$singlebm" | grep -o 'TAGS="[^"]*"' | sed 's/^TAGS="\(.*\)"/\1/')"
      bmdesc="$(echo "$singlebm" | sed 's/.*>\(.*\)<\/A>/\1/')"

      if [ -n "$oldbmlink" ]; then
       bmlinenr="$(cat "${remotepath}/bookmarks.txt" 2>/dev/null | grep -n "${bmlink}$" | grep -o '^[0-9]*')"
       echo "Identische Verlinkung in bookmarks.txt gefunden (Zeile: ${bmlinenr})."
       currentline="$(sed -n ''$bmlinenr'p' "${remotepath}/bookmarks.txt")"
       oldbmtags="$(echo "$currentline" | cut -f1)"
       oldbmdesc="$(echo "$currentline" | cut -f2)"
       if [ "$bmtags" == "$oldbmtags" -a "$bmdesc" == "$oldbmdesc" ]; then
        echo "Inhalte sind identisch."
       else
        echo "[B] ${currentline}"
        echo "[N] ${bmtags}	${bmdesc}	${bmlink}"
        while true; do
         # Ist notwendig, wenn z.B. ven -B mit newbookmark von remote ausgerufen wird.
         if [ "$ttycheck" -gt 0 ]; then
          logger -s --id=$$ "Lesezeichen mit der URI ${bmlink##*/} ist bereits in Zeile ${bmlinenr} vorhanden."
          venexit=2
          break
         else
          read -p "[B]estehende Zeile belassen oder [N]eue aufnehmen? " bmanswer <"$term"
         fi
         case "$bmanswer" in
           B|b) echo "Bestehender Eintrag in bookmarks.txt bleibt erhalten."
              break
              ;;
           n|N) echo "Alte Zeile ${bmlinenr} wird gelöscht und neuer Inhalt aufgenommen."
                sed -i ''"${bmlinenr}"'d' "${remotepath}/bookmarks.txt" && \
                echo "${bmtags}	${bmdesc}	${bmlink}" >>"${remotepath}/bookmarks.txt"
              break
              ;;
             *) echo "Fehlerhafte Eingabe!"
              ;;
         esac
        done
       fi
      else
       echo "${bmtags}	${bmdesc}	${bmlink}" >>"${remotepath}/bookmarks.txt"
       venexit=0
      fi

     done <<<"$bmlist"
     # Leerzeilen werden entfernt.
     sed -i '/^$/d' "${remotepath}/bookmarks.txt"

}

while getopts Bh opt; do
 case $opt in
   B) # Neues Lesezeichen hinzufügen
      shift $(("$OPTIND"-1))
      [ -z "$(echo "$3" | grep '://')" ] && logger -s --id=$$ "Keine gültige URI." && exit 3
      tfile=$(mktemp)
      echo "<DT><A HREF=\"${3}\" ADD_DATE=\"$(date '+%s')\" LAST_MODIFIED=\"$(date '+%s')\" TAGS=\"${1}\">${2}</A>" >"$tfile"
      bmfile="$tfile"
      impbmfile
      rm -f "$tfile"
      break
   ;;
   h) usage
      exit
 esac
done

[ -z "$venexit" ] && venexit=0
exit "$venexit"
